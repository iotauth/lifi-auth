# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Unit-Test:
    name: Unit Test
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install openssl
      run: sudo apt-get update && sudo apt-get install -y openssl

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Unit Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

  Integration-test:
    name: Integration-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Check out iotauth repository
      uses: actions/checkout@v4
      with:
        repository: iotauth/iotauth
        submodules: true
        ref: ${{ inputs.compiler-ref }}
    - name: Check out specific ref of reactor-c
      uses: actions/checkout@v4
      with:
        repository: iotauth/sst-c-api
        path: entity/c
        ref: ${{ github.ref }}
      if: ${{ github.ref}}
    - name: Install openssl
      run: sudo apt-get update && sudo apt-get install -y openssl
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file auth/pom.xml
    - name: Make the script files executable
      run: chmod +x ./examples/generateAll.sh
    - name: Run the scripts
      run: |
        ./examples/generateAll.sh -p asdf
